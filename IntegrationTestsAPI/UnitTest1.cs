using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using Newtonsoft.Json;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using WebShopAPI.Controllers;
using WebShopAPI.Models;
using Xunit;

namespace IntegrationTestsAPI
{
    [TestClass]
    public class IntegrationTestsController  
    {

        private readonly Mock<ProductContext> _productContextMock = new();

        private HttpClient _httpClient = null!;

        //public async Task InitializeAsync()
        //{
           
        //    var hostBuilder = AutoGeneratedProgram.CreateHostBuilder(new string[0])
        //        .ConfigureWebHost(webHostBuilder =>
        //        {
        //            webHostBuilder.UseTestServer();
        //        })
        //        .ConfigureServices((_, services) =>
        //        {
        //            services.AddSingleton(_profileServiceMock.Object);
        //        });

        //    var host = await hostBuilder.StartAsync();
        //    _httpClient = host.GetTestClient();
        //}

        //public Task DisposeAsync()
        //{
        //    return Task.CompletedTask;
        //}

        //public async Task GetProduct_HappyPath()
        //{
        //    //var ProductTitle = "HalloWorld";
        //    var product = new Product
        //    {
        //        ProductTitle = "Demo1",
        //        ProductDescription = "product1",
        //        ProductPrice = 20,
        //        ProductQuantity = 1,
        //        ProductImage = "Image.png",
        //        ProductSize = "S"
        //    };
        //    var productContextMock = new Mock<ProductContext>();

        //    var controller = new ProductsController(productContextMock.Object);
        //    var products = controller.GetProducts();

        //    var response = await _httpClient.GetAsync($"api/product/");
        //    response.EnsureSuccessStatusCode();
        //    Assert.Equals(HttpStatusCode.OK, response.StatusCode);

        //    var returnedJson = await response.Content.ReadAsStringAsync();
        //    var returnedProduct = JsonConvert.DeserializeObject<Product>(returnedJson);
        //     Assert.Equals(product, returnedProduct);
        //}
    }
}